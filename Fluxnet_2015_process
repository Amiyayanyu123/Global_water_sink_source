library(reshape2)
library(tidyverse)
library(bootstrap)
library(QuantPsyc)  #姝ゅ寘涔熷彲浠ヨ緭鍑烘爣鍑嗗寲鐨勫洖褰掔郴鏁? lm.beta(lm_chap)
library(relaimpo)
library(psych)
library(ggplot2)
#remove spatial autocorrelation
library(nlme)
library(ape)
library(MuMIn)
library(ggstatsplot)
library(rsq)
library(extrafont)
library(car)
library(bfast)
library(remotes)
library(zoo)
library(tidyverse)
library(mblm)
library(reshape2)
library(lubridate)
library(dplyr)
library(ggplot2)
library(glmnet)

# ####################################################
# # 定义函数来判断CSV文件中是否包含指定的列变量
# check_csv_file <- function(file_path, columns) {
#   # 读取CSV文件
#   csv_data <- read_csv(file_path)
#   
#   # 判断CSV文件中是否包含指定的列变量
#   if (all(columns %in% colnames(csv_data))) {
#     # 如果包含指定的列变量，则将文件名添加到列表中
#     file_name <- basename(file_path)
#     output_list <<- append(output_list, file_name)
#   }
# }
# 
# # 设置读取文件的路径
# path <- "F:\\Fluxnet\\YY"
# 
# # 指定需要查找的列变量
# search_columns <- c("TA_F_MDS", "TIMESTAMP","P_F",
#                     "LE_F_MDS","VPD_F_MDS","TA_F_MDS")
# 
# # 初始化一个空的列表来存储包含指定列变量的CSV文件名
# output_list <- list()
# 
# # 遍历指定文件夹中的所有CSV文件，调用函数进行判断
# files <- list.files(path, pattern = "\\.csv$", full.names = TRUE)
# walk(files, ~ check_csv_file(.x, search_columns))
# 
# # 输出包含指定列变量的CSV文件名
# cat(paste(output_list, collapse = "\n"))
# ##################################################################

##############################################
path = "F:\\Fluxnet\\YY"
file = "FLX_US-Ton_FLUXNET2015_FULLSET_YY_2001-2014_1-4.csv"
filesnames <- list.files(path, pattern = "\\.csv$")

combined_data_sensi <- {}
combined_data_trend <- {}
combined_data_contri <- {}
for (file in filesnames) {
  # 读取CSV文件
  csv_data <- read.csv(file.path(path, file), header = TRUE,na = "-9999")
  
  # 提取文件名作为新的一列
  csv_data$file_name <- file
  
  csv_data <- csv_data %>% dplyr::select(TIMESTAMP,file_name,TA_F_MDS,P_F,
                                         LE_F_MDS,VPD_F_MDS,GPP_DT_VUT_MEAN,SW_IN_F_MDS) %>% 
                                         rename(time = TIMESTAMP,station = file_name,Tmean = TA_F_MDS,Pre = P_F,
                                         ET =LE_F_MDS,VPD = VPD_F_MDS,GPP = GPP_DT_VUT_MEAN,Rs = SW_IN_F_MDS) %>%
                                         mutate(EI = ET/Pre)
  
  
  regression = csv_data %>% na.omit()
  
  if(nrow(regression) > 10) {
    ridge_data = regression %>% dplyr::select(Tmean,Pre,VPD,GPP,Rs,EI) %>% scale(center = T, scale = T) %>% as.data.frame()
   
    x = as.matrix(ridge_data %>% dplyr::select(Tmean,Pre,VPD,GPP,Rs))
    y = ridge_data$EI
     model = glmnet( x = x,y = y,alpha = 0, lambda = 1)
    
     tidy_model_output <- broom::tidy(model) 
     
     y_predicted <- predict(model, s = 1, newx = x)
     
     #find SST and SSE
     sst <- sum((y - mean(y))^2)
     sse <- sum((y_predicted - y)^2)
     
     #find R-Squared
     rsq <- 1 - sse/sst
     
     all = cbind(tidy_model_output,rsq) %>% transform(SID = file)
     
     ###############################################################trend
    df = regression %>% dplyr::select(Tmean,Pre,VPD,GPP,Rs,EI) %>% scale(center = T, scale = T) %>% as.data.frame() 
    df = cbind(regression %>% dplyr::select(time), df) 
    
    trend = df %>%  
      pivot_longer(-1) %>% 
      group_by(name) %>% 
      summarise(
        coefficients = list(coef(lm(value ~ df[,1])))
      ) %>% 
      unnest_wider(coefficients)
    
    p = df %>%  
      pivot_longer(-1) %>% 
      group_by(name) %>% 
      summarise(
        p_values = list(summary(lm(value ~ df[,1]))$coefficients[,4]) # 计算回归系数的 P 值
      ) %>% 
      unnest_wider(p_values)
    
    colnames(trend) = c("term","intercept_trend","trend")
    
    colnames(p) = c("term","intercept_p","p")
    
    trend = merge(trend,p)
    ###################################################################
    all_contri = merge(all,trend) %>% mutate(contri = estimate*trend)
    
    
  } else {
    all = data.frame()
    all_contri = data.frame()
    trend = data.frame()
  }
  
  # 将当前文件的数据合并到大的数据框中
  combined_data_sensi <- bind_rows(combined_data_sensi, all)
  combined_data_trend <- bind_rows(combined_data_trend, trend)
  combined_data_contri <- bind_rows(combined_data_contri, all_contri)
}
###############################################################################################
Sites = unique(combined_data_sensi$SID)

unique(combined_data_sensi$rsq) %>% boxplot()

statis_plot = combined_data_sensi %>% group_by(term) %>% 
  summarise(
  Q50 = median(estimate),
  mean = mean(estimate),
  Q25 = quantile(estimate,probs = 0.25),
  Q75 = quantile(estimate,probs = 0.75)
) %>% as.data.frame() %>% .[-1,]

ggplot(data = statis_plot,aes(x= term, y=mean))+ 
  geom_bar(position="stack", stat="identity",color = "grey",fill = NA,size = 1)+
  geom_errorbar(data = statis_plot,aes(x= term, y= Q50, ymin=Q25, ymax=Q75), width=0,size=1,color = "grey", 
                position=position_dodge(0.3))+
  geom_point(data = statis_plot,aes(x= term, y= Q50),position=position_dodge(0.3),size=4,color = "grey")+
  labs(x="Variable", y = "Sensitivity") +geom_text(aes(label = round(mean,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0.2)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

######################################################################################################trend

statis_plot = combined_data_trend %>% group_by(term) %>% 
  summarise(
    Q50 = median(trend)*10,
    mean = mean(trend)*10,
    Q25 = quantile(trend,probs = 0.25)*10,
    Q75 = quantile(trend,probs = 0.75)*10
  ) %>% as.data.frame()

ggplot(data = statis_plot,aes(x= term, y=mean))+ 
  geom_bar(position="stack", stat="identity",color = "grey",fill = NA,size = 1)+
  geom_errorbar(data = statis_plot,aes(x= term, y= Q50, ymin=Q25, ymax=Q75), width=0,size=1,color = "grey", 
                position=position_dodge(0.3))+
  geom_point(data = statis_plot,aes(x= term, y= Q50),position=position_dodge(0.3),size=4,color = "grey")+
  labs(x="Variable", y = "Trend") +geom_text(aes(label = round(mean,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0.2)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

######################################################################################################

statis_plot = combined_data_contri %>% group_by(term) %>% 
  summarise(
    Q50 = median(contri)*10,
    mean = mean(contri)*10,
    Q25 = quantile(contri,probs = 0.25)*10,
    Q75 = quantile(contri,probs = 0.75)*10
  ) %>% as.data.frame()

ggplot(data = statis_plot,aes(x= term, y=mean))+ 
  geom_bar(position="stack", stat="identity",color = "grey",fill = NA,size = 1)+
  geom_errorbar(data = statis_plot,aes(x= term, y= Q50, ymin=Q25, ymax=Q75), width=0,size=1,color = "grey", 
                position=position_dodge(0.3))+
  geom_point(data = statis_plot,aes(x= term, y= Q50),position=position_dodge(0.3),size=4,color = "grey")+
  labs(x="Variable", y = "Trend by variables") +geom_text(aes(label = round(mean,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0.2)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

###############################################################
selected_climate <- combined_data_contri %>% filter(combined_data_contri$term %in% c("Pre", "Rs","Tmean","VPD")) %>% dplyr::select(contri,SID) %>% 
  group_by(SID) %>% summarise(Climate = sum(contri))

selected_vegetation <- combined_data_contri %>% filter(combined_data_contri$term %in% c("GPP")) %>% dplyr::select(contri,SID) %>% 
  group_by(SID) %>% summarise(Vege = sum(contri))

select_all = merge(selected_climate,selected_vegetation)

select_all$contri_cli = abs(select_all$Climate)/(abs(select_all$Climate)+abs(select_all$Vege))
  
select_all$contri_vege = abs(select_all$Vege)/(abs(select_all$Climate)+abs(select_all$Vege))  
  

plot = select_all %>% dplyr::select(SID,contri_cli,contri_vege) %>% reshape2::melt()

statis_plot = plot %>% 
  group_by(variable) %>%
  summarise(median = median(value, na.rm = TRUE)*100,
            mean = mean(value, na.rm = TRUE)*100,
            Q25 = quantile(value,probs = 0.25, na.rm = TRUE)*100,
            Q75 = quantile(value,probs = 0.75, na.rm = TRUE)*100) 

ggplot(data = statis_plot,aes(x= variable, y=mean,fill=variable))+ 
  geom_bar(position="stack", stat="identity",color = "grey",size = 1)+
  geom_errorbar(data = statis_plot,aes(x= variable, y= median, ymin=Q25, ymax=Q75), width=0,size=1,color = "grey", 
                position=position_dodge(0.3))+
  geom_point(data = statis_plot,aes(x= variable, y= median),position=position_dodge(0.3),size=4,color = "grey")+
  labs(x="Variable", y = "Contribution") +geom_text(aes(label = round(mean,digits = 0)),size = 5,hjust = 0.5, nudge_x = 0.2)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

setwd("F:\\Global_water_consumption\\Data\\Fluxnet_data")
write.table(combined_data_contri,"combined_data_contri.csv",row.names=F,sep=",")
