######################statistics the dangerious regions for ratio, sensitivity and the AB ratio
library(raster)
library(xts)
library(lubridate)
library(ggstatsplot)
library(rsq)
library(extrafont)
library(car)
library(bfast)
library(remotes)
library(ggpmisc)
library(dplyr)
library(lubridate)
library(mice)
library(VIM)



setwd("F:\\Global_water_consumption\\Data\\VOD_reproduce")

AB <- stack("ratio_direct_indirect.tif")

ratio <- stack("ratio_VOD_climate.tif")

class <- stack("division.tif")

setwd("F:\\Global_water_consumption\\Data\\VOD_reproduce\\Data")

sensi <- stack("coeff_model1_ridge.tif")
sensi = sensi$VOD_EI


# setwd("F:\\Global_water_sink_source\\ecological")
# 
# PET <- stack("PET.tif")
# 
# Pre <- stack("Pre.tif")
# 
# LULC <- stack("LULC.tif")
# 
# KNDVI<- stack("KNDVI.tif")
####################################
multi_frame <-
  as.data.frame(AB , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

multi_frame$ratio = extract(ratio ,multi_frame[,1:2])
multi_frame$sensi = extract(sensi ,multi_frame[,1:2])
multi_frame$class = extract(class,multi_frame[,1:2])

multi_frame$Pre = extract(Pre,multi_frame[,1:2])
multi_frame$PET = extract(PET,multi_frame[,1:2])
multi_frame$LULC = extract(LULC,multi_frame[,1:2])
multi_frame$KNDVI = extract(KNDVI,multi_frame[,1:2])
multi_frame$DI = multi_frame$Pre/multi_frame$PET


se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}

#########################################################################
statis_plot = multi_frame %>% na.omit() %>%
  summarise(Q10 = quantile(sensi,probs = 0.10, na.rm = TRUE),
            Q20 = quantile(sensi,probs = 0.20, na.rm = TRUE),
            Q30 = quantile(sensi,probs = 0.30, na.rm = TRUE),
            Q40 = quantile(sensi,probs = 0.40, na.rm = TRUE),
            Q50 = quantile(sensi,probs = 0.50, na.rm = TRUE),
            Q60 = quantile(sensi,probs = 0.60, na.rm = TRUE),
            Q70 = quantile(sensi,probs = 0.70, na.rm = TRUE),
            Q80 = quantile(sensi,probs = 0.80, na.rm = TRUE),
            Q90 = quantile(sensi,probs = 0.90, na.rm = TRUE))  %>% as.data.frame() 


statis_plot = t(statis_plot) %>% transform(ID=seq(1,9,by=1))

ggplot(data=statis_plot, aes(x=ID, y=X_data)) +
  geom_bar(stat="identity", fill=NA,color = "grey",fill = NA,width = 0.7,size = 1)+scale_x_continuous(breaks = seq(0,10,1))+
  labs(x="Deciles", y = "Sensitivity") +geom_text(aes(label = round(X_data,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0,nudge_y =0.02)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

#########################################################################
statis_plot = multi_frame %>% na.omit() %>%
  summarise(Q10 = quantile(ratio,probs = 0.10, na.rm = TRUE),
            Q20 = quantile(ratio,probs = 0.20, na.rm = TRUE),
            Q30 = quantile(ratio,probs = 0.30, na.rm = TRUE),
            Q40 = quantile(ratio,probs = 0.40, na.rm = TRUE),
            Q50 = quantile(ratio,probs = 0.50, na.rm = TRUE),
            Q60 = quantile(ratio,probs = 0.60, na.rm = TRUE),
            Q70 = quantile(ratio,probs = 0.70, na.rm = TRUE),
            Q80 = quantile(ratio,probs = 0.80, na.rm = TRUE),
            Q90 = quantile(ratio,probs = 0.90, na.rm = TRUE))  %>% as.data.frame() 


statis_plot = t(statis_plot) %>% transform(ID=seq(1,9,by=1))

ggplot(data=statis_plot, aes(x=ID, y=X_data)) +
  geom_bar(stat="identity", fill=NA,color = "grey",fill = NA,width = 0.7,size = 1)+scale_x_continuous(breaks = seq(0,10,1))+
  labs(x="Deciles", y = "Contribution difference") +geom_text(aes(label = round(X_data,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0,nudge_y =0.02)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
#########################################################################
statis_plot = multi_frame %>% na.omit() %>%
  summarise(Q10 = quantile(ratio_direct_indirect ,probs = 0.10, na.rm = TRUE),
            Q20 = quantile(ratio_direct_indirect ,probs = 0.20, na.rm = TRUE),
            Q30 = quantile(ratio_direct_indirect ,probs = 0.30, na.rm = TRUE),
            Q40 = quantile(ratio_direct_indirect ,probs = 0.40, na.rm = TRUE),
            Q50 = quantile(ratio_direct_indirect ,probs = 0.50, na.rm = TRUE),
            Q60 = quantile(ratio_direct_indirect ,probs = 0.60, na.rm = TRUE),
            Q70 = quantile(ratio_direct_indirect ,probs = 0.70, na.rm = TRUE),
            Q80 = quantile(ratio_direct_indirect ,probs = 0.80, na.rm = TRUE),
            Q90 = quantile(ratio_direct_indirect ,probs = 0.90, na.rm = TRUE))  %>% as.data.frame() 


statis_plot = t(statis_plot) %>% transform(ID=seq(1,9,by=1))

ggplot(data=statis_plot, aes(x=ID, y=X_data)) +
  geom_bar(stat="identity", fill=NA,color = "grey",fill = NA,width = 0.7,size = 1)+scale_x_continuous(breaks = seq(0,10,1))+
  labs(x="Deciles", y = "Contribution difference") +geom_text(aes(label = round(X_data,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0,nudge_y =0.02)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))





