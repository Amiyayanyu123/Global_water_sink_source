###############1 For CRU NC process
library(ncdf4) # package for netcdf manipulation
library(raster) # package for raster manipulation
library(rgdal) # package for geospatial analysis
library(ggplot2) # package for plotting
library(lubridate)

setwd("E:\\Budyko_w\\GRUN_CRU_analysis\\GRUN")
nc <- nc_open("GRUN_v1_GSWP3_WGS84_05_1902_2014.nc")
attributes(nc)$names
print(paste("The file has",nc$nvars,"variables,",nc$ndims,"dimensions and",nc$natts,"NetCDF attributes"))
attributes(nc$var)$names

t <- ncvar_get(nc, "time")
tunits<-ncatt_get(nc,"time",attname="units")
tustr<-strsplit(tunits$value, " ")
dates<-as.Date(t,origin=unlist(tustr)[3])

r.array <- ncvar_get(nc, "Runoff") # store the data in a 3-dimensional array
fillvalue <- ncatt_get(nc, "Runoff", "_FillValue")
r.array[r.array == fillvalue$value] <- NA
#############
r_brick <- brick(r.array ,xmn=-90, xmx=90, ymn=-180, ymx=180,crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))

# note that you may have to play around with the transpose (the t() function) and flip() before the data are oriented correctly. In this example, the netcdf file recorded latitude on the X and longitude on the Y, so both a transpose and a flip in the y direction were required.
r_brick <- flip(t(r_brick), direction='y')
b2 <- r_brick[[which(as.Date(t,origin=unlist(tustr)[3]) >= as.Date("1902-01-01") & as.Date(t,origin=unlist(tustr)[3]) <= as.Date("2014-12-01"))]]

dim(b2)
plot(b2)
num_years <- rep(1903:2013, each=12)
s <- stackApply(b2, num_years, fun=mean)
dim(s)
plot(s)
shp = readOGR("E:\\ET\\basins\\basin_4\\basin_4.shp")
crs(shp)
crs(s)

runoff_mean <- extract(s,shp,fun=mean,na.rm=T)
Id = shp$PFAF_ID
runoff_m = cbind(Id,runoff_mean)
write.table(runoff_m,"Runoff_basins_4.csv",row.names=F,sep=",")
