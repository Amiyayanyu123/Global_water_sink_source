library(raster)
library(lubridate)
library(lubridate)
library(tidyverse)

setwd("H:\\Water_sink_source\\2015_2100_compare")

sensi1 <- stack("coeff_model1_SSP245.tif") 

multi_frame1 <-
  as.data.frame(sensi1 , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long1 = multi_frame1 %>% dplyr::select(Pr_EI, Temp_EI, VPD_EI, Rs_EI, LAI_EI) %>% reshape2::melt() %>%
  transform(Time = "SSP245")

sensi2 <- stack("coeff_model1_SSP585.tif") 

multi_frame2 <-
  as.data.frame(sensi2, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long2 = multi_frame2 %>% dplyr::select(Pr_EI, Temp_EI, VPD_EI, Rs_EI, LAI_EI) %>% reshape2::melt() %>%
  transform(Time = "SSP2585")

multi_long = rbind(multi_long1,multi_long2)

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}


statis_plot = multi_long %>% 
  group_by(variable,Time) %>%
  summarise(median = median(value, na.rm = TRUE),
            mean = mean(value, na.rm = TRUE),
            Q25 = quantile(value,probs = 0.25, na.rm = TRUE),
            Q75 = quantile(value,probs = 0.75, na.rm = TRUE),
            se = se(value,na.rm = T)) 

ggplot(data = statis_plot,aes(x= variable, y=median,color= Time))+ 
  geom_errorbar(data = statis_plot,aes(x= variable, y= median, ymin=Q25, ymax=Q75,color = Time), width=0,size=1, 
                position=position_dodge(0.8))+scale_color_manual(values=c( "#FFBE7A","#FA7F6F"))+
  geom_point(data = statis_plot,aes(x= variable, y= median,fill = Time),position=position_dodge(0.8),size=4)+
  labs(x="Variable", y = "Sensitivity") +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))+ facet_wrap(~ variable, ncol=5,scales = "free")
###########################################################################################
sensi1 <- stack("all_trend_SSP245.tif") 

multi_frame1 <-
  as.data.frame(sensi1 , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long1 = multi_frame1 %>% dplyr::select(trend_lai, trend_EI, trend_rs, trend_tmean, trend_pr, trend_vpd ) %>% reshape2::melt() %>%
  transform(Time = "SSP245")

sensi2 <- stack("all_trend_SSP585.tif") 

multi_frame2 <-
  as.data.frame(sensi2, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long2 = multi_frame2 %>% dplyr::select(trend_lai,  trend_EI, trend_rs, trend_tmean, trend_pr, trend_vpd ) %>% reshape2::melt() %>%
  transform(Time = "SSP585")

multi_long = rbind(multi_long1,multi_long2)

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}


statis_plot = multi_long %>% 
  group_by(variable,Time) %>%
  summarise(median = median(value, na.rm = TRUE),
            mean = mean(value, na.rm = TRUE),
            Q25 = quantile(value,probs = 0.25, na.rm = TRUE),
            Q75 = quantile(value,probs = 0.75, na.rm = TRUE),
            se = se(value,na.rm = T)) 

ggplot(data = statis_plot,aes(x= variable, y=median,color= Time))+ 
  geom_errorbar(data = statis_plot,aes(x= variable, y= median, ymin=Q25, ymax=Q75,color = Time), width=0,size=1, 
                position=position_dodge(0.8))+scale_color_manual(values=c( "#FFBE7A","#FA7F6F"))+
  geom_point(data = statis_plot,aes(x= variable, y= median,fill = Time),position=position_dodge(0.8),size=4)+
  labs(x="Variable", y = "Sensitivity") +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))+ facet_wrap(~ variable, ncol=6,scales = "free")
##############################################################################
sensi1 <- stack("trend_var_EI_SSP245.tif") 

multi_frame1 <-
  as.data.frame(sensi1 , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long1 = multi_frame1 %>% dplyr::select(trend_lai, trend_pr, trend_tmean, trend_vpd, trend_rs ) %>% reshape2::melt() %>%
  transform(Time = "SSP245")

sensi2 <- stack("trend_var_EI_SSP585.tif") 

multi_frame2 <-
  as.data.frame(sensi2, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long2 = multi_frame2 %>% dplyr::select(trend_lai, trend_pr, trend_tmean, trend_vpd, trend_rs ) %>% reshape2::melt() %>%
  transform(Time = "SSP585")

multi_long = rbind(multi_long1,multi_long2)

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}


statis_plot = multi_long %>% 
  group_by(variable,Time) %>%
  summarise(median = median(value, na.rm = TRUE)*100,
            mean = mean(value, na.rm = TRUE)*100,
            Q25 = quantile(value,probs = 0.25, na.rm = TRUE)*100,
            Q75 = quantile(value,probs = 0.75, na.rm = TRUE)*100,
            se = se(value,na.rm = T)*100) 

ggplot(data = statis_plot,aes(x= variable, y=mean,color= Time))+ 
  geom_bar(data = statis_plot,aes(x= variable, y=mean,color= Time),position=position_dodge(0.8), stat="identity",fill = NA,width = 0.8)+
  geom_errorbar(data = statis_plot,aes(x= variable, y= median, ymin=Q25, ymax=Q75,color = Time), width=0,size=1, 
                position=position_dodge(0.8))+scale_color_manual(values=c( "#FFBE7A","#FA7F6F"))+
  geom_point(data = statis_plot,aes(x= variable, y= median,fill = Time),position=position_dodge(0.8),size=4)+
  labs(x="Variable", y = "Trend by variable") +geom_text(aes(label = round(mean,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0.4,nudge_y = 0.1)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
##############################################################################

sensi1 <- stack("all_ratio_SSP245.tif") 

multi_frame1 <-
  as.data.frame(sensi1 , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long1 = multi_frame1 %>% dplyr::select(vege_ratio,climate_ratio) %>% reshape2::melt() %>%
  transform(Time = "SSP245")

sensi2 <- stack("all_ratio_SSP585.tif") 

multi_frame2 <-
  as.data.frame(sensi2, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long2 = multi_frame2 %>% dplyr::select(vege_ratio,climate_ratio) %>% reshape2::melt() %>%
  transform(Time = "SSP585")

multi_long = rbind(multi_long1,multi_long2)

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}


statis_plot = multi_long %>% 
  group_by(variable,Time) %>%
  summarise(median = median(value, na.rm = TRUE)*100,
            mean = mean(value, na.rm = TRUE)*100,
            Q25 = quantile(value,probs = 0.25, na.rm = TRUE)*100,
            Q75 = quantile(value,probs = 0.75, na.rm = TRUE)*100,
            se = se(value,na.rm = T)*100) 

ggplot(data = statis_plot,aes(x= variable, y=mean,color= Time))+ 
  geom_bar(data = statis_plot,aes(x= variable, y=mean,color= Time),position=position_dodge(0.8), stat="identity",fill = NA,width = 0.8)+
  geom_errorbar(data = statis_plot,aes(x= variable, y= median, ymin=Q25, ymax=Q75,color = Time), width=0,size=1, 
                position=position_dodge(0.8))+scale_color_manual(values=c( "#FFBE7A","#FA7F6F"))+
  geom_point(data = statis_plot,aes(x= variable, y= median,fill = Time),position=position_dodge(0.8),size=4)+
  labs(x="Variable", y = "Trend by variable") +geom_text(aes(label = round(mean,digits = 2)),size = 5,hjust = 0.5, nudge_x = 0.4,nudge_y = 0.1)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

##########################################################################################
sensi1 <- stack("trend_var_total_1SSP245.tif") 

multi_frame1 <-
  as.data.frame(sensi1 , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long1 = multi_frame1 %>% dplyr::select(vege, climate) %>% reshape2::melt() 

sensi2 <- stack("SSP585_all_effects.tif") 

multi_frame2 <-
  as.data.frame(sensi2, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

multi_long2 = multi_frame2 %>% dplyr::select(SSP585_all_effects) %>% reshape2::melt() 

multi_long = rbind(multi_long1,multi_long2)

se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}


statis_plot = multi_long %>% 
  group_by(variable) %>%
  summarise(median = median(value, na.rm = TRUE)*100,
            mean = mean(value, na.rm = TRUE)*100,
            Q25 = quantile(value,probs = 0.25, na.rm = TRUE)*100,
            Q75 = quantile(value,probs = 0.75, na.rm = TRUE)*100,
            se = se(value,na.rm = T)*100) 

ggplot(data = statis_plot,aes(x= variable, y=median))+ 
  geom_errorbar(data = statis_plot,aes(x= variable, y= median, ymin=Q25, ymax=Q75), width=0,size=1, 
                position=position_dodge(0.8))+scale_color_manual(values=c( "#FA7F6F"))+
  geom_point(data = statis_plot,aes(x= variable, y= median),position=position_dodge(0.8),size=4)+
  labs(x="Variable", y = "Trend by variable") +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="none",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))+ facet_wrap(~ variable, ncol=5,scales = "free")

###########################################################################################################################################################################################################################################
library(raster)
library(xts)
library(lubridate)
library(tidyverse)
library(ggpubr)
library(ggpmisc)

setwd("H:\\Water_sink_source\\2015_2100_compare")

ratio <- stack("all_ratio_SSP585.tif")
ratio = ratio$vege_ratio

effect <- stack("trend_var_total_1SSP585.tif")
effect = effect$vege

sensi <- stack("coeff_model1_SSP585.tif")
sensi = sensi$ LAI_EI

AI <- stack("AI_Terra_1982_2019.tif")
LAI <- stack("LAI_mean_SSP585.tif")

trend <- stack("all_trend_SSP585.tif")
LAI_trend = trend$trend_lai
####################################
multi_frame <-
  as.data.frame(LAI , xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

multi_frame$sensi = raster::extract(sensi ,multi_frame[,1:2])
multi_frame$DI = raster::extract(AI ,multi_frame[,1:2])
multi_frame$ratio = raster::extract(ratio ,multi_frame[,1:2])
multi_frame$effect = raster::extract(effect ,multi_frame[,1:2])
multi_frame$LAI_trend = raster::extract(LAI_trend ,multi_frame[,1:2]) 
multi_frame = multi_frame %>% na.omit()
colnames(multi_frame) = c("x","y","LAI","sensi","DI","ratio","effect","LAI_trend")


se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}

##############################################
##############################################
statis_plot = multi_frame %>%  na.omit() %>%
  mutate(bin_DI = cut(DI, breaks = c(seq(0,2,by=0.2),Inf))) %>% 
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0,6,by=0.5),Inf))) %>% 
  group_by(bin_DI,bin_LAI) %>% 
  summarise(median = median(sensi, na.rm = TRUE))  %>% 
  filter( !bin_DI %in% c("(0,0.2]","(2,Inf]") & !bin_LAI %in% c("(0,0.5]","(6,Inf]") ) %>% na.omit()



ggplot(statis_plot, aes(x = bin_LAI, y = bin_DI, fill = median)) + 
  geom_tile()+
  scale_fill_distiller(palette = "Spectral",limits = c(0, 0.35)) +labs(x="LAI", y = "P/PET") +
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        axis.text.x = element_text(size=14,angle = 60),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

##############################################
##############################################
statis_plot = multi_frame %>% na.omit() %>%
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0,6,by=0.5),Inf))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median = median(sensi, na.rm = TRUE),
            Q25 = quantile(sensi,probs = 0.25, na.rm = TRUE),
            Q75 = quantile(sensi,probs = 0.75, na.rm = TRUE) ) %>% 
  filter( !bin_LAI %in% c("(0,0.5]") ) %>% na.omit() %>% transform(LAI = seq(0.25,5.75,by=0.5))

eq_fmt <- "`y`~`=`~%.2g~italic(e)^{%.2g~`x`}"

ggplot(statis_plot, aes(x = LAI, y = median,group = 1)) +geom_point(size = 2)+
  geom_errorbar(data = statis_plot,aes(x= LAI, y= median, ymin=Q25, ymax=Q75), width=0,size=1, 
                position=position_dodge(0.8))+ 
  geom_smooth(method = "lm", formula = y ~ exp(-x),color = "red",linetype = "dashed") +labs(x="LAI", y = "d(AET/P)/dLAI") +
  stat_poly_eq(mapping = aes(x = LAI, y = median,
                             label = sprintf(eq_fmt, 
                                             after_stat(b_0), 
                                             after_stat(b_1))), 
               label.x = 0.9, label.y = 0.9,
               formula =  y ~ exp(x), 
               output.type = "numeric",
               parse = TRUE,size = 6
  ) +stat_poly_eq(label.x=0.9, label.y=0.8, 
                  aes(x=LAI,y=median,label = paste(..rr.label..)), formula =  y ~ exp(-x),
                  parse = TRUE, size = 6)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
#####################################################################################################
################################################################################ Figure2

statis_plot = multi_frame %>% na.omit() %>%
  mutate(bin_DI = cut(DI, breaks = c(seq(0,2,by=0.2),Inf))) %>% 
  group_by(bin_DI) %>% 
  summarise(median = median(sensi, na.rm = TRUE),
            Q25 = quantile(sensi,probs = 0.25, na.rm = TRUE),
            Q75 = quantile(sensi,probs = 0.75, na.rm = TRUE) )%>% 
  filter( !bin_DI %in% c("(0,0.2]") ) %>% na.omit() %>% transform(DI = seq(0.1,1.9,by=0.2))

eq_fmt <- "`y`~`=`~%.2g~italic(e)^{%.2g~`x`}"

ggplot(statis_plot, aes(x = DI, y = median,group = 1)) +geom_point(size = 2)+
  geom_errorbar(data = statis_plot,aes(x= DI, y= median, ymin=Q25, ymax=Q75), width=0,size=1, 
                position=position_dodge(0.8))+ 
  geom_smooth(method = "lm", formula = y ~ exp(-x),color = "red",linetype = "dashed") +labs(x="P/PET", y = "d(AET/P)/dLAI") +
  stat_poly_eq(mapping = aes(x = DI, y = median,
                             label = sprintf(eq_fmt, 
                                             after_stat(b_0), 
                                             after_stat(b_1))), 
               label.x = 0.9, label.y = 0.9,
               formula =  y ~ exp(x), 
               output.type = "numeric",
               parse = TRUE,size = 6
  ) +stat_poly_eq(label.x=0.9, label.y=0.8, 
               aes(x=DI,y=median,label = paste(..rr.label..)), formula =  y ~ exp(-x),
               parse = TRUE, size = 6)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
####################################################################
statis_plot = multi_frame %>% na.omit() %>%
  mutate(bin_trendlai = cut(LAI_trend, breaks = c(seq(0,0.04,by=0.002),Inf))) %>% 
  group_by(bin_trendlai) %>% 
  summarise(median = median(sensi, na.rm = TRUE),
            Q25 = quantile(sensi,probs = 0.25, na.rm = TRUE),
            Q75 = quantile(sensi,probs = 0.75, na.rm = TRUE),
            LAI_Q25 = quantile(LAI_trend,probs = 0.25, na.rm = TRUE)*100,
            LAI_Q75 = quantile(LAI_trend,probs = 0.75, na.rm = TRUE)*100,) %>% 
  filter( !bin_trendlai %in% c("(0.04,Inf]") ) %>% na.omit() %>% transform(DI = seq(0.1,3.9,by=0.2))

ggplot(statis_plot, aes(x = DI, y = median,group = 1)) +geom_point(size = 2)+
  geom_errorbar(data = statis_plot,aes(x= DI, y= median, ymin=Q25, ymax=Q75), width=0,size=1, 
                position=position_dodge(0.8))+ 
  geom_errorbarh(aes(xmin=LAI_Q25, xmax=LAI_Q75),size=1)+
  geom_smooth(method = "lm", formula = y ~ exp(-x),color = "red",linetype = "dashed") +labs(x="LAI trend (m2/m2/100 yr)", y = "d(AET/P)/dLAI") +
  stat_poly_eq(mapping = aes(x = DI, y = median,
                             label = sprintf(eq_fmt, 
                                             after_stat(b_0), 
                                             after_stat(b_1))), 
               label.x = 0.9, label.y = 0.9,
               formula =  y ~ exp(x), 
               output.type = "numeric",
               parse = TRUE,size = 6
  ) +stat_poly_eq(label.x=0.9, label.y=0.8, 
                  aes(x=DI,y=median,label = paste(..rr.label..)), formula =  y ~ exp(-x),
                  parse = TRUE, size = 6)+
  theme(axis.title=element_text(size=14,face="bold",color="black"),
        axis.text = element_text(size=14,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=14),
        legend.position="right",
        legend.text = element_text(size=14
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

################################################################################################################################################################################################################
library(ncdf4) # package for netcdf manipulation
library(raster) # package for raster manipulation
library(ggplot2) # package for plotting
library(lubridate)
library(tidyverse)

#########################################################################################historical
setwd("H:\\Water_sink_source\\Water_sink_source_CMIP6\\Datasets\\30yr_ridgeregression_SSP585")

filenames <- list.files(pattern="all_ratio_1", full.names=TRUE)
ldf <- lapply(filenames, stack)

stk1 <- terra::rast(filenames)

multi_frame_1 <-
  as.data.frame(stk1, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3)) 

colnames(multi_frame_1) =  c(names(multi_frame_1)[1:2],paste(names(multi_frame_1)[3:4],"_1",sep=""))

##
filenames <- list.files(pattern="all_ratio_2", full.names=TRUE)
ldf <- lapply(filenames, stack)

stk1 <- terra::rast(filenames)

multi_frame_2 <-
  as.data.frame(stk1, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

colnames(multi_frame_2) =  c(names(multi_frame_1)[1:2],paste(names(multi_frame_1)[3:4],"_2",sep=""))

###
filenames <- list.files(pattern="all_ratio_3", full.names=TRUE)
ldf <- lapply(filenames, stack)

stk1 <- terra::rast(filenames)

multi_frame_3 <-
  as.data.frame(stk1, xy = TRUE) %>%
  na.omit() %>% mutate(across(c(x, y), round, digits = 3))

colnames(multi_frame_3) =  c(names(multi_frame_1)[1:2],paste(names(multi_frame_1)[3:4],"_3",sep=""))

muti_frame = merge(multi_frame_1,multi_frame_2)
muti_frame = merge(muti_frame,multi_frame_3)

#
se <- function(x, na.rm=FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x)/length(x))
}
##################################
multi_long = muti_frame %>% dplyr::select(-x,-y) %>% reshape2::melt()
statis_plot = multi_long %>% 
  group_by(variable) %>%
  summarise(median = median(value, na.rm = TRUE)*100,
            Q25 = quantile(value,probs = 0.25, na.rm = TRUE)*100,
            Q75 = quantile(value,probs = 0.75, na.rm = TRUE)*100 )

####################
library(devtools)
all1 = rbind(statis_plot,statis_plot_1)
all2 = rbind(all1,statis_plot_2)
scaleFUN <- function(x) sprintf("%.2f", x)
#
A2 = ggplot(all2, aes(x=ID, y= mean,color = UID,fill = UID))+ geom_ribbon(aes(ymin=mean - 2*se, ymax=mean + 2*se),alpha=0.2,colour = NA)+
  geom_line(size = 0.8)+geom_hline(yintercept=0, linetype="dashed", color = "black")+
  stat_poly_eq(formula = y ~ x,aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse=TRUE,label.y.npc = "bottom",label.x.npc = "right",size = 6)+ scale_y_continuous(labels=scaleFUN)+
  labs(x="Year", y = "Slope(ET,LAI)") +scale_color_manual(values=c("#ffa60f","#ed5a65","#2486b9"))+
  scale_fill_manual(values=c("#ffa60f","#ed5a65","#2486b9"))+
  theme(axis.title=element_text(size=20,face="bold",color="black"),
        axis.text = element_text(size=18,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=18),
        legend.position="none",
        legend.text = element_text(size=18
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))









































