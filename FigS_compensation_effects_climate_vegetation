###################### Statistics for the dangerous regions based on ratio, sensitivity, and AB ratio
# Load required libraries for raster manipulation, time series, and plotting
library(raster)         # For raster data operations
library(lubridate)      # For date/time processing
library(tidyverse)      # For data manipulation and ggplot2-based plotting

# -----------------------------------------------------------------------------
# Modify the temporary directory to a D drive path
# This block reassigns the base tempdir function so that temporary data are stored in "D:\\temp_data"
tempdir <- function() "D:\\temp_data"  # Change tempdir to D:\temp_data
unlockBinding("tempdir", baseenv())
utils::assignInNamespace("tempdir", tempdir, ns = "base", envir = baseenv())
assign("tempdir", tempdir, baseenv())
lockBinding("tempdir", baseenv())

# -----------------------------------------------------------------------------
# Set working directory to the folder containing compensation datasets
setwd("E:\\compensation_CMIP6\\Datasets\\compensation")

# Read the "compensation" raster stack for the period 1900-1940
effect <- stack("compensation_1900_1940.tif")
# Extract the 'climate' layer from the stack
climate = effect$climate

# Read the same compensation file and extract the 'vege' (vegetation) layer
effect <- stack("compensation_1900_1940.tif")
vege = effect$vege

# Load additional datasets: LAI mean for SSP585 and overall effects for SSP585
LAI <- stack("LAI_mean_SSP585.tif")
all = stack("SSP585_all_effects.tif")

# -----------------------------------------------------------------------------
# Convert the LAI raster to a data frame including spatial coordinates
multi_frame <-
  as.data.frame(LAI, xy = TRUE) %>%
  na.omit() %>%                        # Remove rows with NA values
  mutate(across(c(x, y), round, digits = 3))  # Round x and y coordinates to 3 decimals

# Spatially extract values for 'climate', 'vege', and 'all' from their respective rasters using the xy locations
multi_frame$climate = raster::extract(climate, multi_frame[, 1:2])
multi_frame$vege    = raster::extract(vege, multi_frame[, 1:2])
multi_frame$all     = raster::extract(all, multi_frame[, 1:2])
multi_frame = multi_frame %>% na.omit()

# Rename columns for clarity
colnames(multi_frame) = c("x", "y", "LAI", "climate", "vege", "all")

# -----------------------------------------------------------------------------
# Define a function to calculate standard error (SE)
se <- function(x, na.rm = FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x) / length(x))
}

# -----------------------------------------------------------------------------
# Compute summary statistics of vegetation effect binned by LAI (using bins from 0 to 5, in increments of 0.5)
statis_plot_1 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0, 5, by = 0.5), Inf))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median = median(vege, na.rm = TRUE) * 100,
            Q25    = quantile(vege, probs = 0.25, na.rm = TRUE) * 100,
            Q75    = quantile(vege, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI %in% c("(5,Inf]")) %>% na.omit() %>% 
  transform(ID = "LAI")

# Compute summary statistics of climate effect binned by LAI using the same breaks
statis_plot_2 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0, 5, by = 0.5), Inf))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median = median(climate, na.rm = TRUE) * 100,
            Q25    = quantile(climate, probs = 0.25, na.rm = TRUE) * 100,
            Q75    = quantile(climate, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI %in% c("(5,Inf]")) %>% na.omit() %>% 
  transform(ID = "Climate")

# Combine the two summary datasets into one
statis_plot = rbind(statis_plot_1, statis_plot_2)

# Create a ggplot showing LAI bins vs. median effect (either LAI or Climate) with error bars
A = ggplot(statis_plot, aes(x = bin_LAI, y = median, group = 2, color = ID)) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = Q25, ymax = Q75), width = 0, size = 1, position = position_dodge(0.8)) +
  labs(x = "LAI", y = "LAI or Climate effect") +
  theme(axis.title   = element_text(size = 14, face = "bold", color = "black"),
        axis.text    = element_text(size = 14, face = "plain", color = "black"),
        axis.text.x  = element_text(size = 14, angle = 60),
        panel.background  = element_rect(colour = "black", fill = NA),
        panel.grid.minor  = element_blank(),
        text         = element_text(size = 14),
        legend.position  = "none",
        legend.text  = element_text(size = 14),
        legend.background = element_rect(colour = NA, fill = NA),
        axis.ticks = element_line(colour = "black"))

# -----------------------------------------------------------------------------
# Binning with finer resolution (bin width = 0.25) and comparing vegetation and climate effects
statis_plot_1 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI_1 = cut(LAI, breaks = c(seq(0, 5, by = 0.25), Inf))) %>% 
  group_by(bin_LAI_1) %>% 
  summarise(median_vege = median(vege, na.rm = TRUE) * 100,
            Q25_vege    = quantile(vege, probs = 0.25, na.rm = TRUE) * 100,
            Q75_vege    = quantile(vege, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI_1 %in% c("(5,Inf]")) %>% na.omit()

statis_plot_2 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0, 5, by = 0.25), Inf))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median_cli = median(climate, na.rm = TRUE) * 100,
            Q25_cli    = quantile(climate, probs = 0.25, na.rm = TRUE) * 100,
            Q75_cli    = quantile(climate, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI %in% c("(5,Inf]")) %>% na.omit()

# Combine the two summary tables side-by-side
statis_plot = cbind(statis_plot_1, statis_plot_2) %>% as.data.frame()

# Create a scatter plot comparing median vegetation effect vs. median climate effect with error bars and regression line
B = ggplot(statis_plot, aes(x = median_vege, y = median_cli)) +
  geom_errorbar(aes(ymin = Q25_cli, ymax = Q75_cli), width = 0, size = 0.5, position = position_dodge(0.8)) +
  geom_errorbarh(aes(xmin = Q25_vege, xmax = Q75_vege), size = 0.5) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", formula = y ~ x, color = "red", linetype = "dashed") +
  labs(x = "LAI effect", y = "Climate effect") +
  stat_poly_eq(formula = y ~ x,
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
               parse = TRUE, label.y.npc = "bottom", label.x.npc = "right", size = 6) +
  theme(axis.title   = element_text(size = 14, face = "bold", color = "black"),
        axis.text    = element_text(size = 14, face = "plain", color = "black"),
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.minor = element_blank(),
        text         = element_text(size = 14),
        legend.position  = "right",
        legend.text  = element_text(size = 14),
        legend.background = element_rect(colour = NA, fill = NA),
        axis.ticks   = element_line(colour = "black"))

# -----------------------------------------------------------------------------
# Repeat analysis for SSP245 (compensation scenario) from a different working directory
setwd("H:\\Water_sink_source\\2015_2100_compare")

# Read the total trend effect raster for SSP245
effect <- stack("trend_var_total_1SSP245.tif")
climate = effect$climate

effect <- stack("trend_var_total_1SSP245.tif")
vege = effect$vege

# Read LAI mean for SSP245
LAI <- stack("LAI_mean_SSP245.tif")

# Convert the LAI raster to a data frame with coordinates
multi_frame <-
  as.data.frame(LAI, xy = TRUE) %>%
  na.omit() %>% 
  mutate(across(c(x, y), round, digits = 3))

# Extract climate and vegetation trend effects at the LAI raster locations
multi_frame$climate = raster::extract(climate, multi_frame[, 1:2])
multi_frame$vege    = raster::extract(vege, multi_frame[, 1:2])
multi_frame = multi_frame %>% na.omit()
colnames(multi_frame) = c("x", "y", "LAI", "climate", "vege")

# Re-define the standard error function if needed
se <- function(x, na.rm = FALSE) {
  if (na.rm) x <- na.omit(x)
  sqrt(var(x) / length(x))
}

# Calculate summary statistics for the vegetation effect binned by LAI (using 0.5 increments)
statis_plot_1 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0, 5, by = 0.5), Inf))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median = median(vege, na.rm = TRUE) * 100,
            Q25    = quantile(vege, probs = 0.25, na.rm = TRUE) * 100,
            Q75    = quantile(vege, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI %in% c("(5,Inf]")) %>% na.omit() %>% 
  transform(ID = "LAI")

# Calculate summary statistics for the climate effect binned by LAI (using 0.5 increments)
statis_plot_2 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0, 5, by = 0.5), Inf))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median = median(climate, na.rm = TRUE) * 100,
            Q25    = quantile(climate, probs = 0.25, na.rm = TRUE) * 100,
            Q75    = quantile(climate, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI %in% c("(5,Inf]")) %>% na.omit() %>% 
  transform(ID = "Climate")

# Combine the two datasets
statis_plot = rbind(statis_plot_1, statis_plot_2)

# Create a plot showing LAI bins versus the median effect for both LAI and Climate
C = ggplot(statis_plot, aes(x = bin_LAI, y = median, group = 2, color = ID)) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = Q25, ymax = Q75), width = 0, size = 1, position = position_dodge(0.8)) +
  labs(x = "LAI", y = "LAI or Climate effect") +
  theme(axis.title   = element_text(size = 14, face = "bold", color = "black"),
        axis.text    = element_text(size = 14, face = "plain", color = "black"),
        axis.text.x  = element_text(size = 14, angle = 60),
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.minor = element_blank(),
        text         = element_text(size = 14),
        legend.position  = "none",
        legend.text  = element_text(size = 14),
        legend.background = element_rect(colour = NA, fill = NA),
        axis.ticks   = element_line(colour = "black"))

# -----------------------------------------------------------------------------
# Finer resolution binning (bin width = 0.25) comparing vegetation and climate effects for SSP245
statis_plot_1 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI_1 = cut(LAI, breaks = c(seq(0, 5, by = 0.25), Inf))) %>% 
  group_by(bin_LAI_1) %>% 
  summarise(median_vege = median(vege, na.rm = TRUE) * 100,
            Q25_vege    = quantile(vege, probs = 0.25, na.rm = TRUE) * 100,
            Q75_vege    = quantile(vege, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI_1 %in% c("(5,Inf]")) %>% na.omit()

statis_plot_2 = multi_frame %>% 
  na.omit() %>%
  mutate(bin_LAI = cut(LAI, breaks = c(seq(0, 5, by = 0.25), Inf))) %>% 
  group_by(bin_LAI) %>% 
  summarise(median_cli = median(climate, na.rm = TRUE) * 100,
            Q25_cli    = quantile(climate, probs = 0.25, na.rm = TRUE) * 100,
            Q75_cli    = quantile(climate, probs = 0.75, na.rm = TRUE) * 100) %>%
  filter(!bin_LAI %in% c("(5,Inf]")) %>% na.omit()

# Combine the finer binning results
statis_plot = cbind(statis_plot_1, statis_plot_2) %>% as.data.frame()

# Create a scatter plot comparing median vegetation effect and median climate effect with error bars
D = ggplot(statis_plot, aes(x = median_vege, y = median_cli)) +
  geom_errorbar(aes(ymin = Q25_cli, ymax = Q75_cli), width = 0, size = 0.5, position = position_dodge(0.8)) +
  geom_errorbarh(aes(xmin = Q25_vege, xmax = Q75_vege), size = 0.5) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", formula = y ~ x, color = "red", linetype = "dashed") +
  labs(x = "LAI effect", y = "Climate effect") +
  stat_poly_eq(formula = y ~ x,
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
               parse = TRUE, label.y.npc = "bottom", label.x.npc = "right", size = 6) +
  theme(axis.title   = element_text(size = 14, face = "bold", color = "black"),
        axis.text    = element_text(size = 14, face = "plain", color = "black"),
        panel.background = element_rect(colour = "black", fill = NA),
        panel.grid.minor = element_blank(),
        text         = element_text(size = 14),
        legend.position  = "right",
        legend.text  = element_text(size = 14),
        legend.background = element_rect(colour = NA, fill = NA),
        axis.ticks   = element_line(colour = "black"))

# -----------------------------------------------------------------------------
# Arrange the four plots (A, C, B, D) in a 2x2 grid for comparison
library(ggpubr)
ggarrange(A, C, B, D, ncol = 2, nrow = 2)
