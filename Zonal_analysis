##################################################################RF
#random forest for analysis the R/P correlation
######################################################################
library(corrplot)
library(nlme)
library(ape)
library(MuMIn)
library(extrafont)
library(tidyverse)
library(lubridate)
setwd("F:\\NF_PF\\Data\\correlation_regression\\analysis")
dt1<-read.table("basins_7_all1.csv",header=T, na.strings = "Na", sep=",")
dt2<-read.table("basins_7_all2.csv",header=T, na.strings = "Na", sep=",")
dt3<-read.table("basins_7_xy.csv",header=T, na.strings = "Na", sep=",")
dt4<-read.table("basins7_pet_hanssen.csv",header=T, na.strings = "Na", sep=",")
dt5<-read.table("Basins7_KP.csv",header=T, na.strings = "Na", sep=",")
dt6<-read.table("basins7_climate_1995_2019.csv",header=T, na.strings = "Na", sep=",")
dt7<-read.table("basins_forest_wue_water_sensitivity.csv",header=T, na.strings = "Na", sep=",")
dt8<-read.table("basins_forest_age.csv",header=T, na.strings = "Na", sep=",")
dt9<-read.table("basins_forest_height.csv",header=T, na.strings = "Na", sep=",")
dt10<-read.table("WUE.csv",header=T, na.strings = "Na", sep=",")
dt11<-read.table("basins_correlation_water.csv",header=T, na.strings = "Na", sep=",")
dt12<-read.table("basins_7_PF_NF_climate.csv",header=T, na.strings = "Na", sep=",")

colnames(dt3) = c("PFAF_ID","x","y")
data = merge(dt1,dt2)
data = merge(data,dt3)
data = merge(data,dt4)
data = merge(data,dt5)
data = merge(data,dt6)
data = merge(data,dt7)
data = merge(data,dt8)
data = merge(data,dt9)
data = merge(data,dt10)
data = merge(data,dt11)
data = merge(data,dt12)

data$DI = data$Pre_1995_2019/data$PET_1995_2019
data$R_1995_2019 =data$Pre_1995_2019 - data$ET_1995_2019
data$WY_1995_2019 = (data$Pre_1995_2019 - data$ET_1995_2019)/data$Pre_1995_2019
data$R_P = data$PF_R_P + data$NF_R_P
data$R = data$PF_R + data$NF_R

data_final = data %>% filter( data$WY_2010_2019 > 0 & data$WY_1995_2004 > 0 & data$WY_1995_2019 > 0
                              & data$ET_2010_2019 < data$PET_2010_2019
                              & data$ET_1995_2004 < data$PET_1995_2004 & data$ET_1995_2019 < data$PET_1995_2019
                             )

#######################################################
data_final = data_final %>% dplyr::filter(  data_final$NF_1 > 0.5 | data_final$PF_ALL > 0.5)

model = data_final%>% dplyr::select(WY_2010_2019,Forest_2015,DI,WUE,forest_age,forest_height,R_P)

model= na.omit(model)


library(randomForest)

dt =cbind(PF_model[,2:7])

t <- tuneRF(x = dt,y = model$WY_2010_2019, # to ensure ntry parameter
            stepFactor = 1,
            plot = TRUE,
            ntreeTry = 1000,
            trace = TRUE,
            improve = 0.01)
t = as.data.frame(t)
mtry_select = t[as.numeric(order(t$OOBError)[1]),]$mtry

set.seed(123)
lm1 <- lm(WY_2010_2019~Forest_2015+DI+WUE+forest_age+forest_height+R_P,
          , data = model)
summary(lm1)
cor(PF_model)


RF1 <- randomForest(WY_2010_2019~Forest_2015+DI+WUE+forest_age+forest_height+R_P
                    , data = model,importance = TRUE,ntree=1000)

importance1 = RF1$importance
imp = varImpPlot(RF1)


#########################################################
data_final = data_final %>% dplyr::filter(  data_final$NF_1 > 0.5 | data_final$PF_ALL > 0.5)

PF_model = data_final%>% dplyr::select(WY_change,DI,PF_WUE,PF_Forest_age,PF_Forest_Height,PF_R_P,PF_ALL) %>% dplyr::filter(data_final$PF_ALL > 0.5)

PF_model= na.omit(PF_model)


library(randomForest)

dt =cbind(PF_model[,2:6])

t <- tuneRF(dt,PF_model$WY_change, # to ensure ntry parameter
            stepFactor = 1,
            plot = TRUE,
            ntreeTry = 1000,
            trace = TRUE,
            improve = 0.01)
t = as.data.frame(t)
mtry_select = t[as.numeric(order(t$OOBError)[1]),]$mtry

set.seed(123)
lm1 <- lm(WY_change~PF_ALL+DI+PF_WUE+PF_Forest_age+PF_Forest_Height+PF_R_P,
                    , data = PF_model)
summary(lm1)
cor(PF_model)


RF1 <- randomForest(WY_change~PF_ALL+DI+PF_WUE+PF_Forest_age+PF_Forest_Height+PF_R_P,mtry = mtry_select
                    , data = PF_model,importance = TRUE,ntree=1000)

importance1 = RF1$importance
imp = varImpPlot(RF1)

#######################################################

NF_model = data_final%>% dplyr::select(WY_change,DI,NF_WUE,NF_Forest_age,NF_Forest_Height,NF_R_P,NF_1) %>% dplyr::filter(data_final$NF_1 > 0.5)

NF_model= na.omit(NF_model)

library(randomForest)

dt =cbind(NF_model[,2:6])

t <- tuneRF(dt,NF_model$WY_change, # to ensure ntry parameter
            stepFactor = 1,
            plot = TRUE,
            ntreeTry = 1000,
            trace = TRUE,
            improve = 0.01)
t = as.data.frame(t)
mtry_select = t[as.numeric(order(t$OOBError)[1]),]$mtry

set.seed(123)
RF2 <- randomForest(WY_change~NF_1+DI+NF_WUE+NF_Forest_age+NF_Forest_Height+NF_R_P,mtry = mtry_select
                    , data = NF_model,importance = TRUE,ntree=1000)

importance2 = RF2$importance
imp = varImpPlot(RF2)
#################################################################################
library(DALEX)
library(lattice)
library(egg) #ggarrange
library(ggplot2)
library(cowplot) #plot_grid()
set.seed(100)
library(DALEX)
library(lattice)
library(egg) #ggarrange
library(ggplot2)
library(cowplot) #plot_grid()


##
yTest <- as.numeric(NF_model$EI_NF)

explainer_rf_DS <- DALEX::explain(RF2, label = "Water Yield",
                                  data = NF_model[,c(1:6,8:9)], y = yTest)


#坐标轴两位小数、一位小数
scaleFUN1 <- function(x) sprintf("%.1f", x)
scaleFUN2 <- function(x) sprintf("%.3f", x)

for (i in 1:8){
  ale_rf_DS_i  <- variable_effect(explainer_rf_DS, variable = colnames(explainer_rf_DS$data)[i], type = "accumulated_dependency")
  
  ale_rf_DS_plot_i<-ggplot(ale_rf_DS_i[6:96,], aes(x=ale_rf_DS_i[6:96,3], y=ale_rf_DS_i[6:96,4]))+
    geom_point(aes(x=ale_rf_DS_i[6:96,3], y=ale_rf_DS_i[6:96,4]),size=0.25)+theme_bw() +
    theme(legend.position = "none",axis.title=element_blank())+ labs(title=element_blank(),
   x =paste0(colnames(explainer_rf_DS$data)[i],""), y = "ALE")+
    theme(
      panel.grid.minor.x=element_blank(),
      panel.grid.major.x = element_blank(),
      panel.grid.minor.y=element_line(colour = "lightgrey",size=0.15,linetype="dotted"),
      panel.grid.major.y=element_line(colour = "lightgrey",size=0.15,linetype="dotted"),
      legend.title=element_blank(),
      axis.text=element_text(size=7),
      axis.title=element_text(size=8),
      axis.ticks=element_line(colour = "grey50",size=0.25),
      legend.text=element_text(size=8),
      panel.border=element_rect(colour = "grey50",size=0.25))+geom_smooth(aes(y=ale_rf_DS_i[6:96,4]),color="lightblue4",method="loess",se=TRUE,size=0.25)+ 
    scale_x_continuous(labels = scaleFUN1)+ scale_y_continuous(labels = scaleFUN2)
  
  ggsave(ale_rf_DS_plot_i, file = paste0("F:\\NF_PF\\NF_PF_basins_WY\\RF_global_forest\\NF", colnames(explainer_rf_DS$data)[i],".pdf"), width =2, height =1.5, dpi = 1000)
}


###################################
yTest <- as.numeric(PF_model$EI_PF)

explainer_rf_DS <- DALEX::explain(RF1, label = "Water Yield",
                                  data = PF_model[,c(1:6,8:9)], y = yTest)


#坐标轴两位小数、一位小数
scaleFUN1 <- function(x) sprintf("%.1f", x)
scaleFUN2 <- function(x) sprintf("%.3f", x)

for (i in 1:8){
  ale_rf_DS_i  <- variable_effect(explainer_rf_DS, variable = colnames(explainer_rf_DS$data)[i], type = "accumulated_dependency")
  
  ale_rf_DS_plot_i<-ggplot(ale_rf_DS_i[6:96,], aes(x=ale_rf_DS_i[6:96,3], y=ale_rf_DS_i[6:96,4]))+
    geom_point(aes(x=ale_rf_DS_i[6:96,3], y=ale_rf_DS_i[6:96,4]),size=0.25)+theme_bw() +
    theme(legend.position = "none",axis.title=element_blank())+ labs(title=element_blank(),
                                                                     x =paste0(colnames(explainer_rf_DS$data)[i],""), y = "ALE")+
    theme(
      panel.grid.minor.x=element_blank(),
      panel.grid.major.x = element_blank(),
      panel.grid.minor.y=element_line(colour = "lightgrey",size=0.15,linetype="dotted"),
      panel.grid.major.y=element_line(colour = "lightgrey",size=0.15,linetype="dotted"),
      legend.title=element_blank(),
      axis.text=element_text(size=7),
      axis.title=element_text(size=8),
      axis.ticks=element_line(colour = "grey50",size=0.25),
      legend.text=element_text(size=8),
      panel.border=element_rect(colour = "grey50",size=0.25))+geom_smooth(aes(y=ale_rf_DS_i[6:96,4]),color="lightblue4",method="loess",se=TRUE,size=0.25)+ 
    scale_x_continuous(labels = scaleFUN1)+ scale_y_continuous(labels = scaleFUN2)
  
  ggsave(ale_rf_DS_plot_i, file = paste0("F:\\NF_PF\\NF_PF_basins_WY\\RF_global_forest\\PF_", colnames(explainer_rf_DS$data)[i],".pdf"), width =2, height =1.5, dpi = 1000)
}


##############################compare
yTest <- as.numeric(NF_model$WY_change)

NF_ex <- DALEX::explain(RF2, label = "Water Yield",
                                  data = NF_model[,c(2:7)], y = yTest)

yTest <- as.numeric(PF_model$WY_change)

PF_ex <- DALEX::explain(RF1, label = "Water Yield",
                                  data = PF_model[,c(2:7)], y = yTest)


#坐标轴两位小数、一位小数
scaleFUN1 <- function(x) sprintf("%.1f", x)
scaleFUN2 <- function(x) sprintf("%.3f", x)
i =1
for (i in 1:6){
  NF_points  <- variable_effect(NF_ex, variable = colnames(NF_ex$data)[i], type = "accumulated_dependency")[6:96,]
  PF_points <- variable_effect(PF_ex, variable = colnames(PF_ex$data)[i], type = "accumulated_dependency")[6:96,]
  
  ale_rf_DS_i = rbind(NF_points,PF_points)
  
  ale_rf_DS_plot_i<-ggplot(ale_rf_DS_i, aes(x=ale_rf_DS_i[,3], y=ale_rf_DS_i[,4],color =ale_rf_DS_i[,1] ))+
    geom_point(aes(x=ale_rf_DS_i[,3], y=ale_rf_DS_i[,4],color =ale_rf_DS_i[,1]),size=0.25)+theme_bw() +
    theme(legend.position = "none",axis.title=element_blank())+ labs(title=element_blank(),
     x =paste0(colnames(explainer_rf_DS$data)[i],""), y = "ALE")+
    theme(
      panel.grid.minor.x=element_blank(),
      panel.grid.major.x = element_blank(),
      panel.grid.minor.y=element_line(colour = "lightgrey",size=0.15,linetype="dotted"),
      panel.grid.major.y=element_line(colour = "lightgrey",size=0.15,linetype="dotted"),
      legend.title=element_blank(),
      axis.text=element_text(size=7),
      axis.title=element_text(size=8),
      axis.ticks=element_line(colour = "grey50",size=0.25),
      legend.text=element_text(size=8),
      panel.border=element_rect(colour = "grey50",size=0.25))+geom_smooth()+ 
    scale_x_continuous(labels = scaleFUN1)+ scale_y_continuous(labels = scaleFUN2)
  ggsave(ale_rf_DS_plot_i, file = paste0("F:\\NF_PF\\NF_PF_basins_WY\\RF_global_forest\\diff_", colnames(explainer_rf_DS$data)[i],".pdf"), width =4, height =4, dpi = 1000)
}





















#####################
##########################################################
diff_final = data_final %>% dplyr::filter(  data_final$NF_1 > 0.2 & data_final$PF_ALL > 0.2)

diff_final$EI_NF = diff_final$ET_2010_2019_NF/diff_final$Pre_2010_2019_NF

diff_final$EI_PF = diff_final$ET_2010_2019_PF/diff_final$Pre_2010_2019_PF

diff_final$diff_EI = diff_final$EI_PF - diff_final$EI_NF

diff_final$diff_forest = diff_final$PF_ALL - diff_final$NF_1

diff_final$diff_forest_age = diff_final$PF_Forest_age - diff_final$NF_Forest_age

diff_final$diff_forest_height = diff_final$PF_Forest_Height - diff_final$NF_Forest_Height

diff_final$diff_WUE = diff_final$PF_WUE - diff_final$NF_WUE

diff_final$diff_ws = diff_final$PF_R_P - diff_final$NF_R_P

diff_model =diff_final %>% dplyr::select(diff_EI,diff_forest,diff_forest_age,diff_WUE,diff_ws,DI,diff_forest_height)

diff_model = na.omit(diff_model)

library(randomForest)

set.seed(123)
RF3 <- randomForest(diff_EI ~ diff_forest+diff_forest_age+diff_WUE+diff_ws+DI+diff_forest_height
                    , data = diff_model,importance = TRUE,ntree=1000)

importance3= RF3$importance
imp = varImpPlot(RF3)
